buildscript {
  repositories {
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net" }
  }
  dependencies {
    classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+", changing: true
  }
}

plugins {
  id "checkstyle"
  id "org.sonarqube" version "3.3"
  id "pmd"
}

apply plugin: "net.minecraftforge.gradle"

repositories {
  mavenCentral()
}

// Mod information.
version = "1.17.1-9.0.1"
group = "com.judge40.minecraft.bettermobgriefinggamerule"
archivesBaseName = "bettermobgriefinggamerule"

minecraft {
  // MCP mappings version.
  mappings channel: "official", version: "1.17.1"

  // Default run configurations.
  runs {
    client {
      workingDirectory project.file("run")

      // Recommended logging data for a userdev environment.
      property "forge.logging.markers", "REGISTRIES"

      // Recommended logging level for the console.
      property "forge.logging.console.level", "debug"

      mods {
        bettermobgriefinggamerule {
          source sourceSets.main
        }
      }
    }

    server {
      workingDirectory project.file("run")

      // Recommended logging data for a userdev environment.
      property "forge.logging.markers", "REGISTRIES"

      // Recommended logging level for the console.
      property "forge.logging.console.level", "debug"

      mods {
        bettermobgriefinggamerule {
          source sourceSets.main
        }
      }
    }

    data {
      workingDirectory project.file("run")

      // Recommended logging data for a userdev environment.
      property "forge.logging.markers", "REGISTRIES"

      // Recommended logging level for the console.
      property "forge.logging.console.level", "debug"

      args "--mod", "bettermobgriefinggamerule", "--all", "--output", file("src/generated/resources/"), "--existing", file("src/main/resources/")

      mods {
        bettermobgriefinggamerule {
          source sourceSets.main
        }
      }
    }
  }
}

dependencies {
  minecraft "net.minecraftforge:forge:1.17.1-37.1.1"

  // Test dependencies.
  ext.junitVersion = "5.9.0"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

  testImplementation "org.hamcrest:hamcrest:2.2"
  testImplementation "org.mockito:mockito-inline:4.8.0"
}

checkstyle {
  config = resources.text.fromArchiveEntry(configurations.checkstyle[0], "google_checks.xml")
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTIUM
  }
}

pmd {
  ignoreFailures = true
}

jar.finalizedBy("reobfJar")

sonarqube {
  properties {
    property "sonar.projectKey", "Judge40_BetterMobGriefingGameRule"
    property "sonar.organization", "judge40"
    property "sonar.host.url", "https://sonarcloud.io"

    property "sonar.java.checkstyle.reportPaths",
      "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"
  }
}

test {
  useJUnitPlatform()
}
